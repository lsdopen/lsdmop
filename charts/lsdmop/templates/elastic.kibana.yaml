# Kibana CRD
{{- if .Values.lsdmop.elastic.kibana.enabled -}}
---
apiVersion: kibana.k8s.elastic.co/v1
kind: Kibana
metadata:
  name: {{ .Release.Name }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  version: "{{ .Values.lsdmop.elastic.kibana.version }}"
  image: "{{ .Values.lsdmop.elastic.kibana.image }}"
  count: {{ .Values.lsdmop.elastic.kibana.count }}
  elasticsearchRef:
    name: {{ .Release.Name }}
  config:
    monitoring.ui.ccs.enabled: false
    xpack.encryptedSavedObjects.encryptionKey: "37LxDnDT9dy*J2DcTE7UQJW6mw@sMmqj"
    xpack.fleet.agents.elasticsearch.hosts: ["https://lsdmop-es-http.lsdmop.svc:9200"]
    xpack.fleet.agents.fleet_server.hosts: 
      - https://{{ .Values.lsdmop.elastic.fleet.fleetURL }}:443
      - https://fleet-server-lsdmop-agent-http.lsdmop.svc:8220
    xpack.fleet.packages:
      - name: system
        version: latest
      - name: elastic_agent
        version: latest
      - name: fleet_server
        version: latest
      - name: kubernetes
        version: latest
    xpack.fleet.agentPolicies:
      - name: Fleet Server on ECK policy
        id: eck-fleet-server
        is_default_fleet_server: true
        namespace: {{ .Release.Name }}
        monitoring_enabled:
          - logs
          - metrics
        package_policies:
        - name: fleet_server-1
          id: fleet_server-1
          package:
            name: fleet_server
      - name: Elastic Agent on ECK policy
        id: eck-agent
        namespace: {{ .Release.Name }}
        monitoring_enabled:
          - logs
          - metrics
        unenroll_timeout: 900
        is_default: true
        package_policies:
          - name: system-1
            id: system-1
            package:
              name: system    
          - name: kubernetes-2
            id: kubernetes-2
            package:
              name: kubernetes  
      # - name: Kubernetes Monitoring on ECK policy
      #   id: eck-agent-k8s
      #   namespace: {{ .Release.Name }}
      #   monitoring_enabled:
      #     - logs
      #     - metrics
      #   unenroll_timeout: 900
      #   is_default: true
      #   package_policies:
      #     - name: kubernetes-2
      #       id: kubernetes-2
      #       package:
      #         name: kubernetes  
  podTemplate:
    spec:
      containers:
      - name: kibana
        resources:
          requests:
            memory: 1Gi
            cpu: 500m
          limits:
            memory: 2Gi
            cpu: 4000m
      tolerations:
        - effect: NoSchedule
          key: dedicated
          operator: Exists
  http:
    tls:
      #selfSignedCertificate:
        #disabled: true
      selfSignedCertificate:
        #secretName: {{ .Values.lsdmop.elastic.kibana.ingress.tls.secretName }}
        subjectAltNames:
        #- ip: 160.46.176.15
        - dns: {{ .Values.lsdmop.elastic.kibana.ingress.url }}
        
---
{{- end }}

# Kibana Ingress
{{- if or (eq .Values.lsdmop.clusterType "gke") (eq .Values.lsdmop.clusterType "rancher") -}}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    meta.helm.sh/release-name: {{ .Release.Name }}
    meta.helm.sh/release-namespace: {{ .Release.Namespace }}
    cert-manager.io/cluster-issuer: {{ .Values.lsdmop.elastic.kibana.ingress.annotations.certmanagerioclusterissuer }}
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    service.alpha.kubernetes.io/app-protocols: '{"https":"HTTPS"}'    
  labels:
    app: kibana
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"    
  name: lsdmop-kb
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - {{ .Values.lsdmop.kibanaURL }}
      secretName: {{ .Values.lsdmop.elastic.kibana.ingress.tls.secretName }}
  rules:
  - host: {{ .Values.lsdmop.elastic.kibana.ingress.url }}
    http:
      paths:
      - backend:
          serviceName: lsdmop-kb-http
          servicePort: 5601
        path: /
        pathType: ImplementationSpecific
---
{{- end }}

# Kibana Route for Openshift
{{- if eq .Values.lsdmop.clusterType "openshift" -}}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: {{ .Release.Name }}-kb-http
  name: {{ .Release.Name }}-kb-http
spec:
  host: {{ .Values.lsdmop.elastic.kibana.ingress.url }}
  port:
    targetPort: http
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: {{ .Release.Name }}-kb-http
    weight: 100
  wildcardPolicy: None
status:
  ingress:
  - conditions:
    - status: "True"
      type: Admitted
    host: {{ .Values.lsdmop.elastic.kibana.ingress.url }}
    routerName: router
    wildcardPolicy: None
---
{{- end }}
