# Elasticsearch
{{- if .Values.lsdmop.elastic.enabled -}}
---
apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
{{- if .Values.lsdmop.elastic.autoscaling.enabled }}
  annotations:
    elasticsearch.alpha.elastic.co/autoscaling-spec: |-
      {
          "pollingPeriod": "20s",
          "policies": [{
            "name": "hot-data",
            "roles": ["master", "data_hot", "data", "transform", "remote_cluster_client", "ingest"],
            "resources": {
                "nodeCount": { "min": {{ .Values.lsdmop.elastic.cluster.hot.count }}, "max": {{ .Values.lsdmop.elastic.cluster.hot.maxcount }} }
            }
          },
          {
              "name": "warm-data",
            "roles": ["master", "data_warm", "data", "data_content", "transform", "remote_cluster_client", "ingest"],
            "resources": {
                "nodeCount": { "min": {{ .Values.lsdmop.elastic.cluster.warm.count }}, "max": {{ .Values.lsdmop.elastic.cluster.warm.maxcount }} }
            }
          },
          {
            "name": "ml",
            "roles": ["ml"],
            "resources": {
                "nodeCount": { "min": {{ .Values.lsdmop.elastic.cluster.ml.count }}, "max": {{ .Values.lsdmop.elastic.cluster.ml.maxcount }} }
            }
          }]
      }
{{- end}}    
spec:
  version: "{{ .Values.lsdmop.elastic.version }}"
  podDisruptionBudget:
    metadata: {}
    spec:
      minAvailable: {{ add .Values.lsdmop.elastic.cluster.hot.count .Values.lsdmop.elastic.cluster.warm.count | sub 1 | mod }}
      selector:
        matchLabels:
          elasticsearch.k8s.elastic.co/cluster-name: {{ .Release.Name }}
          elasticsearch.k8s.elastic.co/node-data: "true"
  nodeSets:

    # HOT DATA NODES
    - config:
        node.store.allow_mmap: false
        #path.repo: /usr/share/elasticsearch/snapshots
        node.roles: ["master", "data_hot", "data", "transform", "remote_cluster_client", "ingest"]
        node.attr.data: hot
        http.max_content_length: 100mb
        xpack:
          security:
            authc:
              api_key:
                enabled: true #required for fleet
{{- if .Values.lsdmop.elastic.ad.enabled }}
              realms:
                native:
                  native1:
                    order: 0
                {{- range $key, $val := .Values.lsdmop.elastic.ad.realms }}
                {{ $key }}:
                  {{ $val | toYaml | indent 18 | trim  }}
                {{- end }}                        
{{- end}}          
      count: {{ .Values.lsdmop.elastic.cluster.hot.count }}
      name: hot-data
      podTemplate:
        metadata:
          labels:
            scrape: es
        spec:
          serviceAccountName: {{ .Release.Name }}-elastic
          serviceAccount: {{ .Release.Name }}-elastic
          automountServiceAccountToken: true
          hostAliases:
            {{ $.Values.lsdmop.elastic.hostAliases | toYaml | indent 12 | trim  }}
          initContainers:
            - name: set-s3-bucket-web-token-dir
              command:
              - mkdir
              - -p
              - /usr/share/elasticsearch/config/repository-s3
            - name: remove-s3-bucket-web-token-symlink
              command:
              - rm
              - -rf
              - /usr/share/elasticsearch/config/repository-s3/aws-web-identity-token-file
            - name: set-s3-bucket-web-token-symlink
              command:
              - ln
              - -s
              - /var/run/secrets/eks.amazonaws.com/serviceaccount/token 
              - "/usr/share/elasticsearch/config/repository-s3/aws-web-identity-token-file"
          containers:
            - env:
                - name: ES_JAVA_OPTS
                  value: "-Xms{{ div .Values.lsdmop.elastic.cluster.hot.mem 2 }}g -Xmx{{ div .Values.lsdmop.elastic.cluster.hot.mem 2}}g"
                - name: ZONE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['topology.kubernetes.io/zone']
                {{ if .Values.lsdmop.elastic.ad.enabled }}
                - name: AD_BIND_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: lsdmop-es-ad-bind-user
                      key: ObserveAD
                      optional: true
                {{- end }}
              name: elasticsearch
              resources:
                limits:
                  cpu: {{ .Values.lsdmop.elastic.cluster.hot.cpulim }}
                  memory: {{ .Values.lsdmop.elastic.cluster.hot.mem }}Gi
                requests:
                  cpu: {{ .Values.lsdmop.elastic.cluster.hot.cpureq }}
                  memory: {{ .Values.lsdmop.elastic.cluster.hot.mem }}Gi
          tolerations:
            - effect: NoSchedule
              key: dedicated
              operator: Equal
              value: {{ .Values.lsdmop.elastic.cluster.hot.tolerations }}
          {{- with .Values.lsdmop.elastic.cluster.hot.nodeSelector }}
          nodeSelector:
          {{ toYaml . | indent 12 }}
          {{- end }}
      volumeClaimTemplates:
        - metadata:
            creationTimestamp: null
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ .Values.lsdmop.elastic.cluster.hot.storagesize }}
            storageClassName: {{ .Values.lsdmop.elastic.cluster.hot.storageclass }}
            
    #WARM DATA NODES            
    - config:
        node.store.allow_mmap: false
        #path.repo: /usr/share/elasticsearch/snapshots
        node.roles: ["master", "data_warm", "data", "data_content", "transform", "remote_cluster_client", "ingest"]
        node.attr.data: warm
        http.max_content_length: 100mb
        xpack:
          security:
            authc:
              api_key:
                enabled: true #required for fleet
{{- if .Values.lsdmop.elastic.ad.enabled }}
              realms:
                native:
                  native1:
                    enabled: true
                    order: 0
                {{- range $key, $val := .Values.lsdmop.elastic.ad.realms }}
                {{ $key }}:
                  {{ $val | toYaml | indent 18 | trim  }}
                {{- end }}            
{{- end}}    

      count: {{ .Values.lsdmop.elastic.cluster.warm.count }}
      name: warm-data
      podTemplate:
        metadata:
          labels:
            scrape: es
        spec:
          serviceAccountName: {{ .Release.Name }}-elastic
          serviceAccount: {{ .Release.Name }}-elastic
          automountServiceAccountToken: true          
          # topologySpreadConstraints:
          #   - maxSkew: 1
          #     topologyKey: topology.kubernetes.io/zone
          #     whenUnsatisfiable: DoNotSchedule
          #     labelSelector:
          #       matchLabels:
          #         elasticsearch.k8s.elastic.co/cluster-name: {{ .Release.Name }}
          #         elasticsearch.k8s.elastic.co/statefulset-name: {{ .Release.Name }}-es-warm-data 
          hostAliases:
            {{ $.Values.lsdmop.elastic.hostAliases | toYaml | indent 12 | trim  }}
          initContainers:
            - name: set-s3-bucket-web-token-dir
              command:
              - mkdir
              - -p
              - /usr/share/elasticsearch/config/repository-s3
            - name: remove-s3-bucket-web-token-symlink
              command:
              - rm
              - -rf
              - /usr/share/elasticsearch/config/repository-s3/aws-web-identity-token-file
            - name: set-s3-bucket-web-token-symlink
              command:
              - ln
              - -s
              - /var/run/secrets/eks.amazonaws.com/serviceaccount/token 
              - "/usr/share/elasticsearch/config/repository-s3/aws-web-identity-token-file"
          containers:
            - env:
                - name: ES_JAVA_OPTS
                  value: "-Xms{{ div .Values.lsdmop.elastic.cluster.warm.mem 2 }}g -Xmx{{ div .Values.lsdmop.elastic.cluster.warm.mem 2}}g"
                - name: ZONE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['topology.kubernetes.io/zone']    
                {{ if .Values.lsdmop.elastic.ad.enabled }}
                - name: AD_BIND_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: lsdmop-es-ad-bind-user
                      key: ObserveAD
                      optional: true
                {{- end }}
              name: elasticsearch
              resources:
                limits:
                  cpu: {{ .Values.lsdmop.elastic.cluster.warm.cpulim }}
                  memory: {{ .Values.lsdmop.elastic.cluster.warm.mem }}Gi
                requests:
                  cpu: {{ .Values.lsdmop.elastic.cluster.warm.cpureq }}
                  memory: {{ .Values.lsdmop.elastic.cluster.warm.mem }}Gi
          tolerations:
            - effect: NoSchedule
              key: dedicated
              operator: Equal
              value: {{ .Values.lsdmop.elastic.cluster.warm.tolerations }}
          {{- with .Values.lsdmop.elastic.cluster.warm.nodeSelector }}
          nodeSelector:
          {{ toYaml . | indent 12 }}
          {{- end }}
      volumeClaimTemplates:
        - metadata:
            creationTimestamp: null
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ .Values.lsdmop.elastic.cluster.warm.storagesize }}
            storageClassName: {{ .Values.lsdmop.elastic.cluster.warm.storageclass }}

    # MACHINE LEARNING NODES            
    - config:
        node.store.allow_mmap: false
        #path.repo: /usr/share/elasticsearch/snapshots
        node.roles: ["ml"]
        #node.attr.data: ml
        xpack:
          security:
            authc:
              api_key:
                enabled: true #required for fleet
{{- if .Values.lsdmop.elastic.ad.enabled }}
              realms:
                native:
                  native1:
                    order: 0
                {{- range $key, $val := .Values.lsdmop.elastic.ad.realms }}
                {{ $key }}:
                  {{ $val | toYaml | indent 18 | trim  }}
                {{- end }}                  

{{- end}} 
      count: {{ .Values.lsdmop.elastic.cluster.ml.count }}
      name: ml
      podTemplate:
        metadata:
          labels:
            scrape: es
        spec:
          serviceAccountName: {{ .Release.Name }}-elastic
          serviceAccount: {{ .Release.Name }}-elastic
          hostAliases:
            {{ $.Values.lsdmop.elastic.hostAliases | toYaml | indent 12 | trim  }}
          automountServiceAccountToken: true          
          containers:
            - env:
                - name: ES_JAVA_OPTS
                  #value: '-Xms1g -Xmx1g -Dlog4j2.formatMsgNoLookups=true'
                  value: "-Xms{{ div .Values.lsdmop.elastic.cluster.ml.mem 2 }}g -Xmx{{ div .Values.lsdmop.elastic.cluster.ml.mem 2}}g"
                {{ if .Values.lsdmop.elastic.ad.enabled }}
                - name: AD_BIND_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: lsdmop-es-ad-bind-user
                      key: ObserveAD
                      optional: true
                {{- end }}
              name: elasticsearch
              resources:
                limits:
                  cpu: {{ .Values.lsdmop.elastic.cluster.ml.cpulim }}
                  memory: {{ .Values.lsdmop.elastic.cluster.ml.mem }}Gi
                requests:
                  cpu: {{ .Values.lsdmop.elastic.cluster.ml.cpureq }}
                  memory: {{ .Values.lsdmop.elastic.cluster.ml.mem }}Gi
      volumeClaimTemplates:
        - metadata:
            creationTimestamp: null
            name: elasticsearch-data
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: {{ .Values.lsdmop.elastic.cluster.ml.storagesize }}
            storageClassName: {{ .Values.lsdmop.elastic.cluster.ml.storageclass }}
---     
{{- end }}
