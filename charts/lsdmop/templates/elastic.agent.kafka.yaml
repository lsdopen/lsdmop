# Elastic Filebeat
{{- if .Values.lsdmop.elastic.kafkamonitoring.enabled -}}


apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: {{ .Release.Name }}agent-metricbeat-kafka
  namespace: {{ .Release.Name }}agent
spec:
  config:
    metricbeat.config.modules:
      path: ${path.config}/modules.d/*.yml
      reload.enabled: true
      reload.period: 10s
    metricbeat.max_start_delay: 10s
    metricbeat.modules:
      - backoff: 250ms
        client_id: metricbeat
        enabled: true
        hosts:
          - kafka0.kafkabroker:port
          - kafka1.kafkabroker:port
          - kafka2.kafkabroker:port
        metricsets:
          - partition
          - consumergroup
        module: kafka
        password: password
        period: 90s
        retries: 3
        sasl.mechanism: PLAIN
        ssl.certificate_authorities: /etc/certs/ca.crt
        ssl.verification_mode: none
        topics: []
        username: username
      - enabled: true
        hosts:
          - http://kafka.namespace.svc:7777/jolokia/
        metricsets:
          - broker
          - consumer
          - producer
        module: kafka
        period: 90s
      - enabled: false
        hosts:
          - localhost:8779
        metricsets:
          - broker
        module: kafka
        period: 90s
      - enabled: false
        hosts:
          - localhost:8774
        metricsets:
          - consumer
        module: kafka
        period: 90s
      - enabled: false
        hosts:
          - localhost:8775
        metricsets:
          - producer
        module: kafka
        period: 90s
    monitoring.enabled: true
    output.elasticsearch:
      allow_older_versions: true
      backoff.init: 10s
      backoff.max: 300s
      bulk_max_size: 400
      compression_level: 9
      hosts:
        - https://elasticsearch:443
      password: ${ELASTICSEARCH_PASSWORD}
      username: elastic
    path.data: /usr/share/metricbeat-kafka/data/
    processors:
      - add_cloud_metadata: {}
      - add_kubernetes_metadata: {}
      - drop_event:
          when:
            or:
              - regexp:
                  kafka.topic.name: ^_confluent.*
  deployment:
    podTemplate:
      spec:
        automountServiceAccountToken: true
        containers:
          - args:
              - '-e'
              - '-c'
              - /etc/beat.yml
            env:
              - name: NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              - name: ELASTICSEARCH_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: elastic
                    name: {{ .Release.Name }}agent-es-elastic-user
                    optional: false
            image: docker.elastic.co/beats/metricbeat:{{ .Values.lsdmop.elastic.version }}
            name: metricbeat
            resources:
              limits:
                cpu: '2'
                memory: 2Gi
              requests:
                cpu: 500m
                memory: 2Gi
            volumeMounts:
              - mountPath: /etc/certs/ca.crt
                name: kafka-ca-crt
                subPath: ca.crt
        securityContext:
          privileged: true
          runAsUser: 0
        serviceAccount: {{ .Release.Name }}agent-metricbeat
        serviceAccountName: {{ .Release.Name }}agent-metricbeat
        volumeMounts:
          - mountPath: /hostfs/sys/fs/cgroup
            name: cgroup
          - mountPath: /var/run/docker.sock
            name: dockersock
          - mountPath: /hostfs/proc
            name: proc
        volumes:
          - name: kafka-ca-crt
            secret:
              optional: false
              secretName: kafka-ca-crt
          - hostPath:
              path: /sys/fs/cgroup
            name: cgroup
          - hostPath:
              path: /var/run/docker.sock
            name: dockersock
          - hostPath:
              path: /proc
            name: proc
  type: metricbeat
  version: {{ .Values.lsdmop.elastic.version }}



{{- end }}




##########################

