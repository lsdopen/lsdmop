# Elastic Metricbeat {{ .Release.Name }}-metricbeat
{{- if .Values.elastic.fleet.enabled -}}
---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: fleet-server-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  policyID: eck-fleet-server
  version: {{ .Values.elastic.version }}
  kibanaRef:
    name: {{ .Release.Name }}
  elasticsearchRefs:
  - name: {{ .Release.Name }}
  mode: fleet
  fleetServerEnabled: true
  image: docker.elastic.co/beats/elastic-agent:{{ .Values.elastic.version }}
  verseion: {{ .Values.elastic.version }}
  deployment:
    replicas: 2
    podTemplate:
      spec:
        serviceAccountName: elastic-agent
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
---
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata:
  name: elastic-agent-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  policyID: eck-agent-1
  version: {{ .Values.elastic.version }}
  kibanaRef:
    name: {{ .Release.Name }}
  fleetServerRef:
    name: fleet-server-{{ .Release.Name }}
  mode: fleet
  daemonSet:
    podTemplate:
      spec:
        serviceAccountName: elastic-agent
        automountServiceAccountToken: true
        securityContext:
          runAsUser: 0
        tolerations:
        - key: dedicated
          effect: "NoSchedule"
          operator: Exists
---

{{ if .Values.elastic.fleetapm.enabled }}
apiVersion: agent.k8s.elastic.co/v1alpha1
kind: Agent
metadata: 
  name: apm-server-{{ .Release.Name }}
spec:
  policyID: eck-apm-1
  version: {{ .Values.elastic.version }}
  kibanaRef:
    name: {{ .Release.Name }}
  fleetServerRef: 
    name: fleet-server-{{ .Release.Name }}
  mode: fleet
  deployment:
    replicas: 1
    podTemplate:
      spec:
        securityContext:
          runAsUser: 0
---
{{- end }}

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: elastic-agent
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - pods
  - nodes
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups: ["coordination.k8s.io"]
  resources:
  - leases
  verbs:
  - get
  - create
  - update
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elastic-agent
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: elastic-agent
subjects:
- kind: ServiceAccount
  name: elastic-agent
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: elastic-agent
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Namespace }}-apm-http
  namespace: {{ .Release.namespace }}
  labels:
    apm.k8s.elastic.co/name: lsdmop
    common.k8s.elastic.co/type: agent
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: {{ .Release.Namespace }}
spec:
  ports:
    - name: https
      protocol: TCP
      port: 8200
      targetPort: 8200
  selector:
    agent.k8s.elastic.co/name: apm-server-{{ .Release.Namespace }}
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
---


{{- end }}
