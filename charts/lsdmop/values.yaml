curl:
  image: docker.io/curlimages/curl:7.74.0

elastic:
  enabled: true
  license:
    enabled: false
    key: ""
  autoscaling:
    enabled: false
  version: "8.16.1"
  ingress:
    annotations: {}
    className: "nginx"
    tls:
      secretName: elastic-ingress-tls
    url: ""
  dedicatedCoordinatingNodes: false
  serviceAccount:
    annotations: {}
  nodeSets: {}
#       data-hot:
#         count: 3
#         node_attributes:
#           data: hot
#         resources:
#           requests:
#             cpu: 1500m
#             memory: 30
#           limits:
#             memory: 30
#         tolerations:
#         - effect: NoSchedule
#           key: dedicated
#           operator: Equal
#           value: elastic-hot
#         storagesize: 560Gi
#         storageClassName: ebs-gp3
#         nodeSelector: {}
#         roles: ["master", "data_hot", "transform", "remote_cluster_client", "ingest"]
#       warm:
#         count: 2
#         node_attributes:
#           data: warm
#           foo: bar
#         resources:
#           requests:
#             cpu: 1500m
#             memory: 30
#           limits:
#             memory: 30
#         tolerations:
#         - effect: NoSchedule
#           key: dedicated
#           operator: Equal
#           value: elastic-warm
#         storagesize: 2760Gi
#         storageClassName: ebs-gp3
#         nodeSelector: {}
#         roles: ["master", "data_warm", "transform", "remote_cluster_client", "ingest"]
#       ml:
#         count: 2
#         resources:
#           requests:
#             cpu: 500m
#             memory: 16
#           limits:
#             memory: 16
#         tolerations: []
#         storagesize: 1Gi
#         storageClassName: ebs-gp3
#         roles: ["ml"]
  hostAliases: []
    # - hostnames:
    #     - ad.lsdopen.io
    #   ip: xxx.xxx.xxx.xx

  # Active Directory Integration
  ad:
    enabled: false
    bindpassword: ""
    # A map of the different realms as supported by Elastic: https://www.elastic.co/guide/en/elasticsearch/reference/8.8/realms.html
    realms: {}
      # active_directory:
      #   ad_example:
      #     bind_dn: >-
      #       CN=svc_account,OU=Service
      #       Accounts,DC=lsdopen,DC=io
      #     bind_password: ${AD_BIND_PASSWORD}
      #     domain_name: lsdopen.io
      #     enabled: true
      #     group_search:
      #       base_dn: DC=lsdopen,DC=io
      #     order: 1
      #     ssl:
      #       verification_mode: none
      #     unmapped_groups_as_roles: false
      #     url: >-
      #       ldaps://ad.lsdopen.io:636, ldaps://ad.lsdopen.io:636,
      #     user_search:
      #       base_dn: DC=lsdopen,DC=io
      #       filter: (userPrincipalName={0})


  #Kibana
  kibana:
    enabled: true
    count: "2"
    ingress:
      url: ""
      enabled: true
      className: nginx
      annotations: {}
      tls:
        secretName: kibana-ingress-tls

  #Enterprise Search
  enterprise_search:
    enabled: false
    count: "1"
    ingress:
      url: enterprise.domain.example
      enabled: true
      className: nginx
      annotations: {}
      tls:
        secretName: enterprise-search-ingress-tls
    resources:
      requests:
        cpu: 1
        memory: 4Gi
      limits:
        memory: 4Gi

  #Filebeat
  filebeat:
    enabled: false
    serviceAccount:
      annotations: {}

  #Cloudwatch Input Source for Filebeat
  filebeatCloudwatch:
    enabled: false
    roleArn: ""
    logArns: []


  ## Metricbeat as a Daemonset to collect metrics from Nodes
  metricbeat:
    enabled: false
  ## Fleet agents as a Daemonset to collect metrics/logs from Nodes (replaces metricbeat and filebeat)
  fleet:
    enabled: false
    fleetURL: ""
    ingress:
      className: nginx
      annotations: {}
      tls:
        secretName: fleet-ingress-tls
      url: ""

  ## Metricbeat to connect to Prometheus
  metricbeatPrometheus:
    enabled: false

  #APM servers

  #New gen Fleet based APM servers - cannot be enabled if apm is enabled
  fleetapm:
    enabled: false
    ingress:
      className: nginx
      annotations: {}
      tls:
        secretName: apm-ingress-tls
      url: ""


  #S3 bucket storage for snapshots
  s3snapshot:
    enabled: false
    bucket: "elastic-storage"
